
import escape from "../../../string-utils/markdown-v2/escape.mjs"
import join from "../../../string-utils/join.mjs"
import getPricesKeyboardMarkup from "../../keyboards/reply/prices-keyboard.mjs"
import getBaseGameInfo from "../../../steam/get-base-game-info.mjs"
import allGames from "../../../steam/all-games.mjs"
import appendNameWithLink from "../../../steam/append-name-with-link.mjs"
import replyCouldNotWithReasonLogging from "../../replies/reply-could-not-with-reason-logging.mjs"

export default async function (message, appid) {
    appid = Number(appid)

    const game = await getBaseGameInfo(appid)

    const handleError = async reason => await replyCouldNotWithReasonLogging(message, reason)

    if (!game) {
        await allGames()
            .then(games => games.find(game => game.appid === appid))
            .then(async game => {
                appendNameWithLink(game)
                await message.editTextMd2(`–ü–æ—Ö–æ–∂–µ, Steam –Ω–∞—Å –æ–±–º–∞–Ω—É–ª\\! –ò–≥—Ä—ã ${game.nameWithLink} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\\. ü´†`)
        }, handleError)
        .catch(handleError)

        return
    }

    if (game.isFree) {
        await message.editTextMd2(`üÜì ${game.nameWithLink} –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è`)
        return
    }

    message.session.game = game
    
    await message.delete()

    await message.replyMd2(
        join('',
            escape('–¢–∞–∫, –Ω–∞—à–µ–ª '),
            game.nameWithLink,
            escape('. –ö–∞–∫—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–≥—Ä—ã —Ç—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å?')
        ),
        {
            reply_markup: getPricesKeyboardMarkup
        }
    )
}